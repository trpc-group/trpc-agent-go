//
// Tencent is pleased to support the open source community by making trpc-agent-go available.
//
// Copyright (C) 2025 Tencent.  All rights reserved.
//
// trpc-agent-go is licensed under the Apache License Version 2.0.
//
//

// Package evaluator provides evaluator for evaluation.
package evaluator

import (
	"context"

	"trpc.group/trpc-go/trpc-agent-go/evaluation/evalset"
	"trpc.group/trpc-go/trpc-agent-go/evaluation/metric"
	"trpc.group/trpc-go/trpc-agent-go/evaluation/status"
)

// Evaluator defines the interface for evaluating invocations.
type Evaluator interface {
	// Name returns the name of the evaluator.
	Name() string
	// Description provides the description of the evaluator.
	Description() string
	// Evaluate evaluates the actual invocations against the expected invocations and returns a result.
	Evaluate(ctx context.Context, actuals, expecteds []*evalset.Invocation,
		evalMetric *metric.EvalMetric) (*EvaluateResult, error)
}

// EvaluateResult represents the aggregated outcome of running an evaluator over a set of invocations.
// It mirrors the schema used by ADK Web, with field names in snake_case to align with the JSON format.
type EvaluateResult struct {
	// OverallScore is the overall score for this evaluation.
	OverallScore float64 `json:"overall_score,omitempty"`
	// OverallStatus represents pass/fail/not-evaluated for the evaluation run.
	OverallStatus status.EvalStatus `json:"overall_status,omitempty"`
	// PerInvocationResults contains results for each invocation.
	PerInvocationResults []PerInvocationResult `json:"per_invocation_results,omitempty"`
}

// PerInvocationResult represents the evaluation result for a single invocation.
// It mirrors the schema used by ADK Web, with field names in snake_case to align with the JSON format.
type PerInvocationResult struct {
	// ActualInvocation is the invocation generated by the agent.
	ActualInvocation *evalset.Invocation `json:"actual_invocation,omitempty"`
	// ExpectedInvocation is the expected invocation.
	ExpectedInvocation *evalset.Invocation `json:"expected_invocation,omitempty"`
	// Score is the evaluator's score for this invocation.
	Score float64 `json:"score,omitempty"`
	// Status indicates the evaluation status of the invocation.
	Status status.EvalStatus `json:"status,omitempty"`
}
